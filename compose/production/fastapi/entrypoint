#!/bin/sh

set -o errexit
set -o pipefail
set -o nounset


postgres_ready() {
python3 << END
import sys

import asyncpg
import asyncio

try:
    async def check_connect():
        await asyncpg.create_pool(
            user="${POSTGRES_USER}",
            password="${POSTGRES_PASSWORD}",
            database="${POSTGRES_DB}",
            host="${POSTGERS_HOST}",
            port=${POSTGERS_PORT})

    loop = asyncio.get_event_loop()
    loop.run_until_complete(check_connect())
except Exception as e:
    print(str(e))
    sys.exit(-1)
sys.exit(0)

END
}
until postgres_ready; do
  >&2 echo "Waiting for postgres to become available..."
  sleep 1
done
>&2 echo "postgres is available"

# init postgres db schema
python init_postgres_schema.py

exec "$@"

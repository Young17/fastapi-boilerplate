version: "3"

x-logging:
  &default-logging
  options:
    max-size: "10m"
    max-file: "5"
  driver: json-file

services:
  fastapi:
    &fastapi
    build:
      context: .
      dockerfile: compose/production/fastapi/Dockerfile
      args:
        - UID=1000
        - GID=1000
    image: app_production_fastapi
    logging: *default-logging
    depends_on:
      - postgres
      - redis
      - logserver
    env_file:
      - ./.envs/.production/.fastapi
      - ./.envs/.production/.postgres
    ports:
      - "0.0.0.0:8000:8000"
    restart: always
    command: /start

  postgres:
    image: postgres:latest
    env_file:
      - .envs/.production/.postgres
    volumes:
      - ${POSTGRES_DATA_DIR}:/var/lib/postgresql/data
    logging: *default-logging
    ports:
      - "127.0.0.1:${POSTGERS_PORT}:${POSTGERS_PORT}"
    restart: always

  redis:
    image: redis:7.2-rc1-alpine
    env_file:
      - ./.envs/.production/.fastapi
    ports:
      - 127.0.0.1:${REDIS_PORT}:${REDIS_PORT}
    logging: *default-logging
    restart: always

  celeryworker:
    <<: *fastapi
    image: app_production_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker
    restart: always

  celerybeat:
    <<: *fastapi
    image: app_production_celerybeat
    volumes:
      - ${CELERY_BEAT_DBFILE_DIR}:/beatdb/
    ports: []
    depends_on:
      - redis
      - postgres
    command: /start-celerybeat
    restart: always

  flower:
    <<: *fastapi
    image: app_production_flower
    ports:
      - "127.0.0.1:5555:5555"
    depends_on:
      - redis
    command: /start-flower
    restart: always

  logserver:
    <<: *fastapi
    image: app_production_logserver
    command: /start-logtcpserver
    volumes:
      - ${LOG_BASE_PATH}:/logs/
    depends_on: []
    ports:
      - "127.0.0.1:${TCP_SERVER_LOG_PORT}:${TCP_SERVER_LOG_PORT}"
    restart: always